<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>it.tidalwave.bluemarine2</groupId>
        <artifactId>blueMarine2</artifactId>
        <version>1.0-ALPHA-8-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>it.tidalwave.bluemarine2</groupId>
    <artifactId>blueMarine2-modules</artifactId>
    <version>1.0-ALPHA-8-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>blueMarine II (modules)</name>
    <description>blueMarine2 (modules)</description>

    <properties>
        <!-- WARNING: don't use 1.3.8, it has got a broken pom which brings is tons of useless stuff! -->
        <aquafx.version>0.2</aquafx.version>
        <httpclient.version>4.4</httpclient.version>
        <jaudiotagger.version>2.2.3</jaudiotagger.version>
        <mp3agic.version>0.8.3</mp3agic.version>
        <sesame.version>2.8.0</sesame.version>
        <tft.spring.version>4.1.4.RELEASE</tft.spring.version>
        <steelblue.version>1.0-ALPHA-9</steelblue.version>
        <thesefoolishthings.version>2.2</thesefoolishthings.version>
        <uuid.version>2.1.5-201007271250</uuid.version>
        
        <tft.mainClass>it.tidalwave.bluemarine2.ui.impl.javafx.Main</tft.mainClass> 
        <tft.javafx.vmargs>${tft.mainClass}</tft.javafx.vmargs> 

        <tft.test.listeners>it.tidalwave.util.test.TestLogger</tft.test.listeners>
        <!--
                <tft.UmlGraphDoc.version>5.4</tft.UmlGraphDoc.version>
                <tft.UmlGraphDoc.additionalParam>-views -attributes -operations -types -postfixpackage -nodefontpackagesize 6 -nodefontclasssize 8 -nodefontsize 7 -edgefontsize 7 -nodesep 0.05 -ranksep 0.1 -visibility -inferdep -inferrel -inferdepinpackage -hide java.*|javax.*|android.*</tft.UmlGraphDoc.additionalParam>
        -->

        <tft.clirr.skip>true</tft.clirr.skip> <!-- breaks Hudson, see BH-5 -->
        <tft.jacoco-maven-plugin.version>0.7.5.201505241946</tft.jacoco-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>it.tidalwave.thesefoolishthings</groupId>
                <artifactId>thesefoolishthings</artifactId>
                <version>${thesefoolishthings.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.steelblue</groupId>
                <artifactId>it-tidalwave-steelblue</artifactId>
                <version>${steelblue.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency> 
                <groupId>org.springframework</groupId> 
                <artifactId>spring-framework-bom</artifactId> 
                <version>${tft.spring.version}</version> 
                <type>pom</type> 
                <scope>import</scope> 
            </dependency> 
            <dependency>
                <groupId>org.openrdf.sesame</groupId>
                <artifactId>sesame-bom</artifactId>
                <version>${sesame.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${tft.aspectjrt.version}</version>
            </dependency>
            <dependency>
                <groupId>net.jthink</groupId>
                <artifactId>jaudiotagger</artifactId>
                <version>${jaudiotagger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aquafx-project</groupId>
                <artifactId>aquafx</artifactId>
                <version>${aquafx.version}</version>
            </dependency>
            
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient-cache</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpclient.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${tft.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${tft.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${tft.logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${tft.logback.version}</version>
            </dependency>
            
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>${tft.jsr305.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${tft.jsr330.version}</version>
            </dependency>
            
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${tft.lombok.version}</version>
            </dependency>            
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- FIXME: workaround - without some modules don't get the .class files in the .jar -->
        <!-- It is due to something from libraries in TheseFoolishThings, but the cause is not yet understood. -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-util</artifactId>
            <version>RELEASE712</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>it.tidalwave.thesefoolishthings</groupId>
            <artifactId>it-tidalwave-util-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Keep this before the mockito-all dependency - see http://stackoverflow.com/questions/15833015/ -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <profiles>
        <profile>
            <id>it.tidalwave-spring-messagebus-v1</id>
            <activation>
                <file>
                    <exists>src/config/activate-it.tidalwave-spring-messagebus-v1-profile</exists>
                </file>
            </activation>
            
            <dependencies>
                <dependency>
                    <groupId>it.tidalwave.thesefoolishthings</groupId>
                    <artifactId>it-tidalwave-messagebus-spring</artifactId>
                </dependency>
                <dependency>
                    <groupId>it.tidalwave.thesefoolishthings</groupId>
                    <artifactId>it-tidalwave-messagebus</artifactId>
                </dependency>

                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aspects</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.aspectj</groupId>
                    <artifactId>aspectjrt</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.aspectj</groupId>
                    <artifactId>aspectjweaver</artifactId>
                </dependency>
            </dependencies>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>aspectj-maven-plugin</artifactId>
                        <configuration>
                            <aspectLibraries combine.children="append">
                                <dependency>
                                    <groupId>it.tidalwave.thesefoolishthings</groupId>
                                    <artifactId>it-tidalwave-messagebus-spring</artifactId>
                                </dependency>
                            </aspectLibraries>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <modules>
        <module>Catalog</module>
        <module>CECNavigationAdapter</module>
        <module>CECWrapper</module>
        <module>Commons</module>
        <module>Downloader</module>
        <module>Installers/Linux</module>
        <module>Installers/LinuxArmV6EmbeddedJRE</module>
        <module>Installers/MacOSXEmbeddedJRE</module>
        <module>JavaFX</module>
        <module>JavaFXApplication</module>
        <module>MediaScanner</module>
        <module>Model</module>
        <module>MusicBrainzREST</module>
        <module>Persistence</module>
        <module>UI</module>
    </modules>

</project>
