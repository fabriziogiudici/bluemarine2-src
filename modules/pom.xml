<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>it.tidalwave.bluemarine2</groupId>
        <artifactId>bluemarine2</artifactId>
        <version>1.0-ALPHA-21-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>it.tidalwave.bluemarine2</groupId>
    <artifactId>bluemarine2-modules</artifactId>
    <version>1.0-ALPHA-21-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>blueMarine II (modules)</name>
    <description>blueMarine2 (modules)</description>

    <properties>
        <activation.version>1.1.1</activation.version>
        <aquafx.version>0.2</aquafx.version>
        <cling.version>2.1.1</cling.version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <httpclient.version>4.4</httpclient.version>
        <jaudiotagger.version>2.2.3</jaudiotagger.version>
        <javax-servlet-api.version>3.1.0</javax-servlet-api.version>
        <jaxb.version>2.2.11</jaxb.version>
        <jackson.version>2.8.5</jackson.version>
        <jetty.version>8.1.8.v20121106</jetty.version>
        <!--<jetty.version>9.3.8.v20160314</jetty.version>-->
        <mp3agic.version>0.8.3</mp3agic.version>
        <rdf4j.version>2.1.4</rdf4j.version>
        <steelblue.version>1.0-ALPHA-16</steelblue.version>
        <thesefoolishthings.version>3.1-ALPHA-7</thesefoolishthings.version>

        <tft.mainClass>it.tidalwave.bluemarine2.ui.impl.javafx.Main</tft.mainClass>
        <tft.javafx.vmargs>${tft.mainClass}</tft.javafx.vmargs>
        <tft.spring.version>5.3.1</tft.spring.version>

        <tft.test.vmOptions>-Xss512m -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8 -Duser.timezone=Europe/Rome</tft.test.vmOptions>
        <tft.test.maxMemory>2048M</tft.test.maxMemory>

        <testSet.iTunes-fg-20160504-2.version>5</testSet.iTunes-fg-20160504-2.version>
        <testSet.iTunes-fg-20161210-1.version>2</testSet.iTunes-fg-20161210-1.version>
        <testSet.amazon-autorip-fg-20170131-1.version>3</testSet.amazon-autorip-fg-20170131-1.version>
        <testSet.iTunes-aac-fg-20170131-1.version>3</testSet.iTunes-aac-fg-20170131-1.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>it.tidalwave.thesefoolishthings</groupId>
                <artifactId>thesefoolishthings</artifactId>
                <version>${thesefoolishthings.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.steelblue</groupId>
                <artifactId>steelblue</artifactId>
                <version>${steelblue.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.rdf4j</groupId>
                <artifactId>rdf4j-bom</artifactId>
                <version>${rdf4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>net.jthink</groupId>
                <artifactId>jaudiotagger</artifactId>
                <version>${jaudiotagger.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aquafx-project</groupId>
                <artifactId>aquafx</artifactId>
                <version>${aquafx.version}</version>
            </dependency>

            <!-- Should activate by itself with JDK 11+, but it fails with Jenkins Maven integration. -->
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-base</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-graphics</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-controls</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-fxml</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>

            <dependency>
                <groupId>org.fourthline.cling</groupId>
                <artifactId>cling-support</artifactId>
                <version>${cling.version}</version>
            </dependency>
            <dependency>
                <groupId>org.fourthline.cling</groupId>
                <artifactId>cling-workbench</artifactId>
                <version>${cling.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient-cache</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpclient.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${activation.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax-servlet-api.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
<!--        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>-->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- RUNTIME DEPENDENCIES -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>it.tidalwave.thesefoolishthings</groupId>
            <artifactId>it-tidalwave-util-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Keep this before the mockito-all dependency - see http://stackoverflow.com/questions/15833015/ -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <modules>
        <module>CaptureOneAppleScript</module>
        <module>Catalog</module>
        <module>CECNavigationAdapter</module>
        <module>CECWrapper</module>
        <module>ClingMediaServer</module>
        <module>Commons</module>
        <module>Downloader</module>
        <module>HeadlessService</module>
        <module>Initializer</module>
        <module>JavaFX</module>
        <module>JavaFXApplication</module>
        <module>MediaScanner</module>
        <module>Model</module>
        <module>MusicBrainz</module>
        <module>MusicBrainzDataModel</module>
        <module>Persistence</module>
        <module>Plugins</module>
        <module>REST</module>
        <module>Services</module>
        <module>UI</module>
        <module>MediaServer</module>
        <module>TestCommons</module>
        <module>Vocabulary</module>
    </modules>

    <profiles>
        <!-- FIXME: the property should be put in the settings.xml of the CI -->
        <profile>
            <id>it.tidalwave-ci-v1</id>
            <properties>
                <blueMarine2.musicTestSets.path>/var/test-sets/MusicTestSets</blueMarine2.musicTestSets.path>
            </properties>
        </profile>

        <!-- ===========================================================================================================


        ============================================================================================================ -->
        <profile>
            <id>it.tidalwave.bluemarine2-retrieve-testsets-profile</id>
            <activation>
                <file>
                    <exists>src/config/activate-it.tidalwave.bluemarine2-retrieve-testsets-profile</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>it.tidalwave.bluemarine2</groupId>
                    <artifactId>it-tidalwave-bluemarine2-mediascanner</artifactId>
                    <classifier>tests</classifier>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-testset-triples</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>it.tidalwave.bluemarine2</groupId>
                                            <artifactId>it-tidalwave-bluemarine2-mediascanner</artifactId>
                                            <classifier>tests</classifier>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/extra</outputDirectory>
                                            <includes>expected-results/**/*.n3</includes>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>it.tidalwave.bluemarine2</groupId>
                                            <artifactId>it-tidalwave-bluemarine2-metadata-musicbrainz</artifactId>
                                            <classifier>tests</classifier>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/extra</outputDirectory>
                                            <includes>expected-results/**/*.n3</includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/test-classes/test-sets</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/extra/expected-results</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- ===========================================================================================================


        ============================================================================================================ -->
        <profile>
            <id>installers</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <modules>
                <module>Installers</module>
            </modules>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <blueMarine2.musicTestSets.path>${blueMarine2.musicTestSets.path}</blueMarine2.musicTestSets.path>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <systemProperty>
                            <key>blueMarine2.workspace</key>
                            <value>${blueMarine2.workspace}</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>commons-logging:commons-logging</exclude>
                                        <exclude>org.aspectj:aspectjweaver</exclude>
                                        <exclude>com.kenai.nbpwr:org-slf4j-jdk14</exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
