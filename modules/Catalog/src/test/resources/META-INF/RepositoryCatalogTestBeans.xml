<?xml version="1.0" encoding="UTF-8"?>
<!--

    *********************************************************************************************************************

    blueMarine II: Semantic Media Centre
    http://tidalwave.it/projects/bluemarine2

    Copyright (C) 2015 - 2021 by Tidalwave s.a.s. (http://tidalwave.it)

    *********************************************************************************************************************

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
    the License. You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations under the License.

    *********************************************************************************************************************

    git clone https://bitbucket.org/tidalwave/bluemarine2-src
    git clone https://github.com/tidalwave-it/bluemarine2-src

    *********************************************************************************************************************

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-autowire="byType">

    <!-- Turns on @Autowired, @PostConstruct, etc. -->
    <context:annotation-config />

    <!-- Enables AOP-based injection of classes that are instantiated outside of the Spring bean factory -->
    <context:spring-configured />

    <aop:aspectj-autoproxy/>

    <bean id="underTest"
          class="it.tidalwave.bluemarine2.model.impl.catalog.RepositoryMediaCatalog" />

    <bean id="repository"
          class="org.eclipse.rdf4j.repository.sail.SailRepository"
          init-method="initialize">
        <constructor-arg>
            <bean class="org.eclipse.rdf4j.sail.memory.MemoryStore" />
        </constructor-arg>
    </bean>

    <bean class="it.tidalwave.bluemarine2.model.impl.catalog.factory.DefaultRepositoryEntityFactory" />

    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="it.tidalwave.bluemarine2.model.MediaFileSystem" />
    </bean>

    <bean id="cacheManager" class="it.tidalwave.bluemarine2.model.impl.MockCacheManager" />

</beans>
